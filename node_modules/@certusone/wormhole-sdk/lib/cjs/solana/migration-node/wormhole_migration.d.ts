export function add_liquidity(program_id: string, from_mint: string, to_mint: string, liquidity_token_account: string, lp_share_token_account: string, amount: BigInt): any;
export function remove_liquidity(program_id: string, from_mint: string, to_mint: string, liquidity_token_account: string, lp_share_token_account: string, amount: BigInt): any;
export function claim_shares(program_id: string, from_mint: string, to_mint: string, output_token_account: string, lp_share_token_account: string, amount: BigInt): any;
export function create_pool(program_id: string, payer: string, from_mint: string, to_mint: string): any;
export function migrate_tokens(program_id: string, from_mint: string, to_mint: string, input_token_account: string, output_token_account: string, amount: BigInt): any;
export function pool_address(program_id: string, from_mint: string, to_mint: string): Uint8Array;
export function authority_address(program_id: string): Uint8Array;
export function share_mint_address(program_id: string, pool: string): Uint8Array;
export function from_custody_address(program_id: string, pool: string): Uint8Array;
export function to_custody_address(program_id: string, pool: string): Uint8Array;
export function parse_pool(data: Uint8Array): any;
export function __wbindgen_json_parse(arg0: any, arg1: any): number;
export function __wbindgen_throw(arg0: any, arg1: any): never;
export { wasm as __wasm };
declare let wasm: any;
